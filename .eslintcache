[{"/Users/moctar/Desktop/www/chatem/src/index.js":"1","/Users/moctar/Desktop/www/chatem/src/components/Firebase/index.js":"2","/Users/moctar/Desktop/www/chatem/src/components/App/App.js":"3","/Users/moctar/Desktop/www/chatem/src/components/Firebase/context.js":"4","/Users/moctar/Desktop/www/chatem/src/components/Firebase/firebase.js":"5","/Users/moctar/Desktop/www/chatem/src/components/Navigation/Navigation.js":"6","/Users/moctar/Desktop/www/chatem/src/components/PasswordForget/PasswordForget.js":"7","/Users/moctar/Desktop/www/chatem/src/components/Home/Home.js":"8","/Users/moctar/Desktop/www/chatem/src/components/SignUp/SignUp.js":"9","/Users/moctar/Desktop/www/chatem/src/constants/routes.js":"10","/Users/moctar/Desktop/www/chatem/src/components/Admin/Admin.js":"11","/Users/moctar/Desktop/www/chatem/src/components/Account/Account.js":"12","/Users/moctar/Desktop/www/chatem/src/components/Landing/Landing.js":"13","/Users/moctar/Desktop/www/chatem/src/components/SignIn/SignIn.js":"14","/Users/moctar/Desktop/www/chatem/src/components/SignOut/SignOut.js":"15","/Users/moctar/Desktop/www/chatem/src/components/PasswordChange/PasswordChange.js":"16","/Users/moctar/Desktop/www/chatem/src/components/Session/index.js":"17","/Users/moctar/Desktop/www/chatem/src/components/Session/context.js":"18","/Users/moctar/Desktop/www/chatem/src/components/Session/withAuthentication.js":"19"},{"size":347,"mtime":1611898812261,"results":"20","hashOfConfig":"21"},{"size":161,"mtime":1612032267038,"results":"22","hashOfConfig":"21"},{"size":1288,"mtime":1612151374944,"results":"23","hashOfConfig":"21"},{"size":288,"mtime":1612052257755,"results":"24","hashOfConfig":"21"},{"size":1170,"mtime":1612044547472,"results":"25","hashOfConfig":"21"},{"size":905,"mtime":1612150107433,"results":"26","hashOfConfig":"21"},{"size":1660,"mtime":1612056974916,"results":"27","hashOfConfig":"21"},{"size":113,"mtime":1611889429416,"results":"28","hashOfConfig":"21"},{"size":2344,"mtime":1612044706378,"results":"29","hashOfConfig":"21"},{"size":235,"mtime":1611890655514,"results":"30","hashOfConfig":"21"},{"size":116,"mtime":1611889381996,"results":"31","hashOfConfig":"21"},{"size":346,"mtime":1612056619524,"results":"32","hashOfConfig":"21"},{"size":122,"mtime":1611889455901,"results":"33","hashOfConfig":"21"},{"size":1796,"mtime":1612056026608,"results":"34","hashOfConfig":"21"},{"size":240,"mtime":1612045221759,"results":"35","hashOfConfig":"21"},{"size":1499,"mtime":1612056742934,"results":"36","hashOfConfig":"21"},{"size":142,"mtime":1612151027253,"results":"37","hashOfConfig":"21"},{"size":111,"mtime":1612149917242,"results":"38","hashOfConfig":"21"},{"size":620,"mtime":1612151362994,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4v8xdg",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/moctar/Desktop/www/chatem/src/index.js",[],"/Users/moctar/Desktop/www/chatem/src/components/Firebase/index.js",[],"/Users/moctar/Desktop/www/chatem/src/components/App/App.js",["83","84"],"/Users/moctar/Desktop/www/chatem/src/components/Firebase/context.js",[],"/Users/moctar/Desktop/www/chatem/src/components/Firebase/firebase.js",["85"],"/Users/moctar/Desktop/www/chatem/src/components/Navigation/Navigation.js",[],["86","87"],"/Users/moctar/Desktop/www/chatem/src/components/PasswordForget/PasswordForget.js",["88"],"import React, { useState } from 'react'; \nimport { Link } from 'react-router-dom';\n\nimport { withFirebase } from '../Firebase'; \nimport * as ROUTES from '../../constants/routes';\n\nconst PasswordForgetPage = () => ( <div>\n    <h1>PasswordForget</h1>\n    <PasswordForgetForm />\n  </div>\n);\n\n\n  \nconst PasswordForgetFormBase = (props) => {\n\n  const INITIAL_STATE = { \n    email: '',\n    error: null\n  };\n  const [inputValues, setInputValues] = useState(INITIAL_STATE);\n  const { email , error } = inputValues; \n\n  const isInvalid = email === '';\n  \n  const handleOnSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const { email } = inputValues;\n      const authUser = await props.firebase.doPasswordReset(email);\n      setInputValues({...INITIAL_STATE});\n    } catch (error) {\n      setInputValues({error})\n    }\n    \n  }\n  const handleOnChange = event => {\n    event.preventDefault();\n    const { name, value } = event.target;\n    setInputValues({...inputValues, [name]: value});\n  }\n\n  return (\n      <form onSubmit={handleOnSubmit}>\n        <input\n          name=\"email\" \n          value={email} \n          onChange={handleOnChange} \n          type=\"text\" \n          placeholder=\"Email Address\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n          {error && <p>{error.message}</p>}\n      </form>\n  ); \n}\n\n\nconst PasswordForgetLink = () => ( <p>\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\n\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\n\nexport default PasswordForgetPage;\n\nexport { PasswordForgetForm, PasswordForgetLink }\n\n","/Users/moctar/Desktop/www/chatem/src/components/Home/Home.js",[],"/Users/moctar/Desktop/www/chatem/src/components/SignUp/SignUp.js",["89","90"],"import React, { useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\n\nconst SignUpPage = () => {\n  return (\n    <div>\n      <h1>SignUpPage</h1>\n      <SignUpForm/>\n    </div>\n    \n  );\n}\n\n\nconst SignUpFormBase = (props) => {\n\n  const INITIAL_STATE = {\n    username: '',\n    email: '',\n    passwordOne: '',\n    passwordTwo: '',\n    error: null\n  };\n\n  const [inputValues, setInputValues] = useState(INITIAL_STATE);\n  const { username, email, passwordOne, passwordTwo, error } = inputValues; \n\n  const handleOnSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const { username, email, passwordOne } = inputValues;\n      const authUser = await props.firebase.doCreateUserWithEmailAndPassword(email, passwordOne);\n      setInputValues({...INITIAL_STATE});\n      props.history.push(ROUTES.HOME);\n    } catch (error) {\n      setInputValues({ error })\n    }\n    \n  }\n  const handleOnChange = event => {\n    const { name, value } = event.target;\n    setInputValues({...inputValues, [name]: value});\n  }\n  const isInvalid = \n    passwordOne !== passwordTwo ||\n    passwordOne === '' ||\n    email === '' ||\n    username === '';\n\n  return (\n    <form onSubmit={handleOnSubmit}>\n      <input \n        onChange={handleOnChange} \n        type='text' \n        name='username' \n        value={username} \n        placeholder='Username'\n      />\n      <input \n        onChange={handleOnChange} \n        type='text' \n        name='email' \n        value={email} \n        placeholder='Email'\n      />\n      <input \n        onChange={handleOnChange} \n        type='password' \n        name='passwordOne' \n        value={passwordOne} \n        placeholder='Password'\n      />\n      <input \n        onChange={handleOnChange} \n        type='password' \n        name='passwordTwo' \n        value={passwordTwo} \n        placeholder='Re-enter Password'\n      />\n      <button disabled={isInvalid} type='submit'>Sign Up</button>\n\n      {error && <p>{error.message}</p>}\n\n    </form>\n  )\n}\n\nconst SignUpLink = () => {\n  return (<p>\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>)\n}\nconst SignUpForm = withRouter(withFirebase(SignUpFormBase));\n\nexport default SignUpPage;\n\nexport { SignUpForm, SignUpLink };","/Users/moctar/Desktop/www/chatem/src/constants/routes.js",[],"/Users/moctar/Desktop/www/chatem/src/components/Admin/Admin.js",[],"/Users/moctar/Desktop/www/chatem/src/components/Account/Account.js",[],"/Users/moctar/Desktop/www/chatem/src/components/Landing/Landing.js",[],"/Users/moctar/Desktop/www/chatem/src/components/SignIn/SignIn.js",["91","92"],"import React, { useState} from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport { SignUpLink } from '../SignUp/SignUp'\nimport { PasswordForgetLink } from '../PasswordForget/PasswordForget';\nimport { withFirebase } from '../Firebase';\n\nimport * as ROUTES from '../../constants/routes';\n\n\nconst SignInPage = () => {\n  return (\n    <div>\n      <h1>SignInPage</h1>\n      <SignInForm/>\n      <PasswordForgetLink/>\n      <SignUpLink/>\n    </div>\n    \n  );\n}\n\n\nconst SignInFormBase = (props) => {\n\n  const INITIAL_STATE = {\n    email: '',\n    password: '',\n    error: null\n  };\n\n  const [inputValues, setInputValues] = useState(INITIAL_STATE);\n  const {email, password, error } = inputValues; \n\n  const handleOnSubmit = async (event) => {\n    event.preventDefault();\n    const { email, password } = inputValues;\n    const authUser = await props.firebase.doSignInWithEmailAndPassword(email, password);\n    setInputValues({...INITIAL_STATE});\n    props.history.push(ROUTES.HOME);\n  }\n  const handleOnChange = event => {\n    const { name, value } = event.target;\n    setInputValues({...inputValues, [name]: value});\n  }\n  const isInvalid =\n    password === '' ||\n    email === '';\n\n  return (\n    <form onSubmit={handleOnSubmit}>\n      <input \n        onChange={handleOnChange} \n        type='text' \n        name='email' \n        value={email} \n        placeholder='Email'\n      />\n      <input \n        onChange={handleOnChange} \n        type='password' \n        name='password' \n        value={password} \n        placeholder='Password'\n      />\n      <button disabled={isInvalid} type='submit'>Sign In</button>\n\n      {error && <p>{error.message}</p>}\n\n    </form>\n  )\n}\n\nconst SignInForm = withRouter(withFirebase(SignInFormBase));\n\nexport default SignInPage;\nexport { SignInForm };","/Users/moctar/Desktop/www/chatem/src/components/SignOut/SignOut.js",[],"/Users/moctar/Desktop/www/chatem/src/components/PasswordChange/PasswordChange.js",["93"],"import React, { useState } from 'react';\n\n\nimport { withFirebase } from '../Firebase';\n\n\nconst PasswordChangeForm = (props) => { \n  \n  const INITIAL_STATE = { \n    passwordOne: '', \n    passwordTwo: '', \n    error: null,\n  };\n  \n  \n  \n  const [inputValues, setInputValues] = useState(INITIAL_STATE);\n  const {passwordOne, passwordTwo, error } = inputValues; \n\n  const isInvalid = passwordOne !== passwordTwo || passwordOne === '';\n\n  const handleOnSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const { passwordOne, passwordTwo } = inputValues;\n      await props.firebase.doPasswordUpdate(passwordOne);\n      setInputValues({...INITIAL_STATE});\n    } catch (error) {\n      setInputValues({error})\n    }\n  }\n  const handleOnChange = event => {\n    event.preventDefault();\n    const { name, value } = event.target;\n    setInputValues({...inputValues, [name]: value});\n  }\n\n  return (\n    <form onSubmit={handleOnSubmit}>\n      <input\n        name=\"passwordOne\" \n        value={passwordOne} \n        onChange={handleOnChange} \n        type=\"password\" \n        placeholder=\"New Password\"\n      /> \n      <input\n        name=\"passwordTwo\" \n        value={passwordTwo} \n        onChange={handleOnChange} \n        type=\"password\" \n        placeholder=\"Confirm New Password\"\n      />\n      <button disabled={isInvalid} type=\"submit\">\n        Reset My Password\n      </button>\n      {error && <p>{error.message}</p>}\n    </form>\n  )\n}\nexport default withFirebase(PasswordChangeForm);","/Users/moctar/Desktop/www/chatem/src/components/Session/index.js",[],"/Users/moctar/Desktop/www/chatem/src/components/Session/context.js",[],"/Users/moctar/Desktop/www/chatem/src/components/Session/withAuthentication.js",[],{"ruleId":"94","severity":1,"message":"95","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":25},{"ruleId":"94","severity":1,"message":"98","line":1,"column":27,"nodeType":"96","messageId":"97","endLine":1,"endColumn":36},{"ruleId":"99","severity":1,"message":"100","line":1,"column":1,"nodeType":"101","messageId":"102","endLine":1,"endColumn":14,"fix":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"94","severity":1,"message":"108","line":30,"column":13,"nodeType":"96","messageId":"97","endLine":30,"endColumn":21},{"ruleId":"94","severity":1,"message":"109","line":35,"column":15,"nodeType":"96","messageId":"97","endLine":35,"endColumn":23},{"ruleId":"94","severity":1,"message":"108","line":36,"column":13,"nodeType":"96","messageId":"97","endLine":36,"endColumn":21},{"ruleId":"94","severity":1,"message":"110","line":2,"column":10,"nodeType":"96","messageId":"97","endLine":2,"endColumn":14},{"ruleId":"94","severity":1,"message":"108","line":38,"column":11,"nodeType":"96","messageId":"97","endLine":38,"endColumn":19},{"ruleId":"94","severity":1,"message":"111","line":25,"column":28,"nodeType":"96","messageId":"97","endLine":25,"endColumn":39},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"112","text":"113"},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"'authUser' is assigned a value but never used.","'username' is assigned a value but never used.","'Link' is defined but never used.","'passwordTwo' is assigned a value but never used.",[0,13],"","no-global-assign","no-unsafe-negation"]